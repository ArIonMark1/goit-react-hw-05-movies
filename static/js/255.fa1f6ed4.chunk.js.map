{"version":3,"file":"static/js/255.fa1f6ed4.chunk.js","mappings":"0RAOMA,EAAa,CACjBC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,WAGM,SAASC,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,+FACdC,EAAAA,EAAAA,IAAkBJ,GACrBK,MAAK,SAAAP,GACJ,GAA+B,IAA3BA,EAAQQ,QAAQC,OAClB,OAAOC,EAAAA,GAAAA,MACL,uCACAtB,GAGJa,GAAW,SAAAU,GAAW,cAAQX,EAAQQ,QAAhB,GACvB,IACAI,MAAMC,QAAQC,OAXG,2CAAH,qDAanBT,GACD,GAAE,CAACH,KAGF,4BACE,SAAC,KAAD,KACA,eAAIa,UAAU,aAAd,SACGf,EAAQgB,KAAI,SAAAC,GAAM,OACjB,2BACE,0BAAI,WAASA,EAAOC,eAAeC,aACnC,uBAAIF,EAAOG,YAFJH,EAAOI,GADC,QAS1B,C,+LClDKC,EAAU,mCACVC,EAAM,gCAGZ,SAASC,EAAkBC,GACzB,IAAIC,QAAQD,OACV,IAAIE,MAAJ,UAAaF,EAAb,yDAEH,CAEM,IAAMG,EAAoB,mCAAG,oGACZC,EAAAA,EAAAA,IAAA,UAAaN,EAAb,oBAAoC,CACxDO,OAAQ,CAAEC,QAAST,EAASU,KAAM,KAFF,UAIX,OAHjBC,EAD4B,QAItBC,OAJsB,yCAKzBD,EAAQE,MALiB,OAOlCX,EAAkBS,GAPgB,2CAAH,qDAWpBG,EAAiB,mCAAG,WAAMf,GAAN,uFAETQ,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAAyBF,GAAM,CACnDS,OAAQ,CACNC,QAAST,KAJkB,UAWR,OATjBW,EAFyB,QAWnBC,OAXmB,yCAYtBD,EAAQE,MAZc,OAc/BX,EAAkBS,GAda,2CAAH,sDAkBjBI,EAAqB,mCAAG,WAAMC,GAAN,2HAI7BR,EAAS,CACbC,QAAST,EACTiB,MAAM,GAAD,OAAKD,GACVN,KAAM,GAP2B,SAUbH,EAAAA,EAAAA,IAVa,4CAUO,CAAEC,OAAAA,IAVT,UAYZ,OAFjBG,EAV6B,QAYvBC,OAZuB,yCAa1BD,EAAQE,MAbkB,OAenCX,EAAkBS,GAfiB,2CAAH,sDAmBrB3B,EAAiB,mCAAG,WAAMJ,GAAN,uFAET2B,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAAyBrB,EAAzB,YAA4C,CAChE4B,OAAQ,CAAEC,QAAST,KAHU,UAKR,OAHjBW,EAFyB,QAKnBC,OALmB,yCAMtBD,EAAQE,MANc,OAQ/BX,EAAkBS,GARa,2CAAH,sDAYjBO,EAAkB,mCAAG,WAAMtC,GAAN,uFAEV2B,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAAyBrB,EAAzB,YAA4C,CAChE4B,OAAQ,CAAEC,QAAST,KAHW,UAKT,OAHjBW,EAF0B,QAKpBC,OALoB,yCAMvBD,EAAQE,MANe,OAQhCX,EAAkBS,GARc,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","components/api_request.js"],"sourcesContent":["import { handleMovieReview } from 'components/api_request';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Review.scss';\n\nconst toastStyle = {\n  position: 'top-right',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n};\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const receiveReview = async () => {\n      await handleMovieReview(movieId)\n        .then(reviews => {\n          if (reviews.results.length === 0) {\n            return toast.error(\n              'Didn`t find anything on this request',\n              toastStyle\n            );\n          }\n          setReviews(prevReviews => [...reviews.results]);\n        })\n        .catch(console.error);\n    };\n    receiveReview();\n  }, [movieId]);\n\n  return (\n    <div>\n      <ToastContainer />\n      <ul className=\"reviewList\">\n        {reviews.map(review => (\n          <li key={review.id}>\n            <h3>Author: {review.author_details.username}</h3>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '7f73521c2f89ba4f40b3583136c2bf19';\nconst url = 'https://api.themoviedb.org/3/';\n\n// ****************************************************************\nfunction returnCustomError(reject) {\n  new Promise.reject(\n    new Error(`${reject} Wrong request!! Nothing was found on your request. `)\n  );\n}\n// #################################################################\nexport const handleRequestPopular = async () => {\n  const request = await axios.get(`${url}trending/all/day`, {\n    params: { api_key: API_KEY, page: 1 },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleRequestById = async id => {\n  // Get the top level details of a movie by ID.\n  const request = await axios.get(`${url}movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  // // ********************************\n  // console.log('movieId from  component => : ', id);\n  // console.log('movieId =>: ', request);\n  // // ********************************\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleMovieSearchList = async fTitle => {\n  // Search for movies by their original, translated and alternative titles.\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie`;\n\n  const params = {\n    api_key: API_KEY,\n    query: `${fTitle}`,\n    page: 1,\n  };\n\n  const request = await axios.get(BASE_URL, { params });\n  // ********************************\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleMovieReview = async movieId => {\n  // https://api.themoviedb.org/3/movie/{movie_id}/reviews\n  const request = await axios.get(`${url}movie/${movieId}/reviews`, {\n    params: { api_key: API_KEY },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleMovieCredits = async movieId => {\n  // https://api.themoviedb.org/3/movie/{movie_id}/credits\n  const request = await axios.get(`${url}movie/${movieId}/credits`, {\n    params: { api_key: API_KEY },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n"],"names":["toastStyle","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","receiveReview","handleMovieReview","then","results","length","toast","prevReviews","catch","console","error","className","map","review","author_details","username","content","id","API_KEY","url","returnCustomError","reject","Promise","Error","handleRequestPopular","axios","params","api_key","page","request","status","data","handleRequestById","handleMovieSearchList","fTitle","query","handleMovieCredits"],"sourceRoot":""}