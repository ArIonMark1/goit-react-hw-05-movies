{"version":3,"file":"static/js/255.6e0d2eea.chunk.js","mappings":"0RAOMA,EAAa,CACjBC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,WAGM,SAASC,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,+FACdC,EAAAA,EAAAA,IAAkBJ,GACrBK,MAAK,SAAAP,GACJ,GAA+B,IAA3BA,EAAQQ,QAAQC,OAClB,OAAOC,EAAAA,GAAAA,MACL,uCACAtB,GAGJa,GAAW,SAAAU,GAAW,cAAQX,EAAQQ,QAAhB,GACvB,IACAI,MAAMC,QAAQC,OAXG,2CAAH,qDAanBT,GACD,GAAE,CAACH,KAGF,4BACE,SAAC,KAAD,KACA,eAAIa,UAAU,aAAd,SACGf,EAAQgB,KAAI,SAAAC,GAAM,OACjB,2BACE,0BAAI,WAASA,EAAOC,eAAeC,aACnC,uBAAIF,EAAOG,YAFJH,EAAOI,GADC,QAS1B,C,+LClDKC,EAAU,mCACVC,EAAM,gCAGZ,SAASC,EAAkBC,GAIzB,OAHmBC,QAAQD,OACzB,IAAIE,MAAJ,0BAA6BF,EAAOG,QAApC,0BAGH,CAEM,IAAMC,EAAoB,mCAAG,6GAEVC,EAAAA,EAAAA,IAAA,UAAaP,EAAb,oBAAoC,CACxDQ,OAAQ,CAAEC,QAASV,EAASW,KAAM,KAHJ,cAE1BC,EAF0B,yBAKzBA,EAAQC,MALiB,yDAOzBX,EAAkB,EAAD,KAPQ,yDAAH,qDAYpBY,EAAiB,mCAAG,WAAMf,GAAN,gGAGPS,EAAAA,EAAAA,IAAA,UAAaP,EAAb,iBAAyBF,GAAM,CACnDU,OAAQ,CACNC,QAASV,KALgB,cAGvBY,EAHuB,yBAQtBA,EAAQC,MARc,yDAUtBX,EAAkB,EAAD,KAVK,yDAAH,sDAgBjBa,EAAqB,mCAAG,WAAMC,GAAN,kFAE7BC,EAF6B,UAEfhB,EAFe,gBAI7BQ,EAAS,CACbC,QAASV,EACTkB,MAAM,GAAD,OAAKF,GACVL,KAAM,GAP2B,kBAUXH,EAAAA,EAAAA,IAAUS,EAAU,CAAER,OAAAA,IAVX,cAU3BG,EAV2B,yBAW1BA,EAAQC,MAXkB,yDAa1BX,EAAkB,EAAD,KAbS,yDAAH,sDAmBrBlB,EAAiB,mCAAG,WAAMJ,GAAN,gGAGP4B,EAAAA,EAAAA,IAAA,UAAaP,EAAb,iBAAyBrB,EAAzB,YAA4C,CAChE6B,OAAQ,CAAEC,QAASV,KAJQ,cAGvBY,EAHuB,yBAMtBA,EAAQC,MANc,yDAQtBX,EAAkB,EAAD,KARK,yDAAH,sDAajBiB,EAAkB,mCAAG,WAAMvC,GAAN,gGAGR4B,EAAAA,EAAAA,IAAA,UAAaP,EAAb,iBAAyBrB,EAAzB,YAA4C,CAChE6B,OAAQ,CAAEC,QAASV,KAJS,cAGxBY,EAHwB,yBAMvBA,EAAQC,MANe,yDAQvBX,EAAkB,EAAD,KARM,yDAAH,qD","sources":["components/Reviews/Reviews.jsx","components/api_request.js"],"sourcesContent":["import { handleMovieReview } from 'components/api_request';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Review.scss';\n\nconst toastStyle = {\n  position: 'top-right',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n};\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const receiveReview = async () => {\n      await handleMovieReview(movieId)\n        .then(reviews => {\n          if (reviews.results.length === 0) {\n            return toast.error(\n              'Didn`t find anything on this request',\n              toastStyle\n            );\n          }\n          setReviews(prevReviews => [...reviews.results]);\n        })\n        .catch(console.error);\n    };\n    receiveReview();\n  }, [movieId]);\n\n  return (\n    <div>\n      <ToastContainer />\n      <ul className=\"reviewList\">\n        {reviews.map(review => (\n          <li key={review.id}>\n            <h3>Author: {review.author_details.username}</h3>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '7f73521c2f89ba4f40b3583136c2bf19';\nconst url = 'https://api.themoviedb.org/3/';\n\n// ****************************************************************\nfunction returnCustomError(reject) {\n  const errMessage = Promise.reject(\n    new Error(`Wrong request!! ${reject.message}, nothing was found. `)\n  );\n  return errMessage;\n}\n// #################################################################\nexport const handleRequestPopular = async () => {\n  try {\n    const request = await axios.get(`${url}trending/all/day`, {\n      params: { api_key: API_KEY, page: 1 },\n    });\n    return request.data;\n  } catch (error) {\n    return returnCustomError(error);\n  }\n};\n\n// #################################################################\nexport const handleRequestById = async id => {\n  // Get the top level details of a movie by ID.\n  try {\n    const request = await axios.get(`${url}movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return request.data;\n  } catch (error) {\n    return returnCustomError(error);\n  }\n  // // ********************************\n};\n\n// #################################################################\nexport const handleMovieSearchList = async fTitle => {\n  // Search for movies by their original, translated and alternative titles.\n  const BASE_URL = `${url}search/movie`;\n\n  const params = {\n    api_key: API_KEY,\n    query: `${fTitle}`,\n    page: 1,\n  };\n  try {\n    const request = await axios.get(BASE_URL, { params });\n    return request.data;\n  } catch (error) {\n    return returnCustomError(error);\n  }\n  // ********************************\n};\n\n// #################################################################\nexport const handleMovieReview = async movieId => {\n  // https://api.themoviedb.org/3/movie/{movie_id}/reviews\n  try {\n    const request = await axios.get(`${url}movie/${movieId}/reviews`, {\n      params: { api_key: API_KEY },\n    });\n    return request.data;\n  } catch (error) {\n    return returnCustomError(error);\n  }\n};\n\n// #################################################################\nexport const handleMovieCredits = async movieId => {\n  // https://api.themoviedb.org/3/movie/{movie_id}/credits\n  try {\n    const request = await axios.get(`${url}movie/${movieId}/credits`, {\n      params: { api_key: API_KEY },\n    });\n    return request.data;\n  } catch (error) {\n    return returnCustomError(error);\n  }\n};\n"],"names":["toastStyle","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","receiveReview","handleMovieReview","then","results","length","toast","prevReviews","catch","console","error","className","map","review","author_details","username","content","id","API_KEY","url","returnCustomError","reject","Promise","Error","message","handleRequestPopular","axios","params","api_key","page","request","data","handleRequestById","handleMovieSearchList","fTitle","BASE_URL","query","handleMovieCredits"],"sourceRoot":""}