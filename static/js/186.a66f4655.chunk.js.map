{"version":3,"file":"static/js/186.a66f4655.chunk.js","mappings":"wQAIe,SAASA,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OARAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,+FACdC,EAAAA,EAAAA,IAAkBJ,GACrBK,MAAK,SAAAP,GAAO,OAAIC,GAAW,SAAAO,GAAW,cAAQR,EAAQS,QAAhB,GAA1B,IACZC,MAAMC,QAAQC,OAHG,2CAAH,qDAKnBP,GACD,GAAE,CAACH,IACmB,IAAnBF,EAAQa,QAER,0BACE,uBAAG,iDAKP,0BACE,wBACGb,GACCA,EAAQc,KAAI,SAAAC,GAAM,OAChB,2BACE,0BAAI,WAASA,EAAOC,eAAeC,aACnC,uBAAIF,EAAOG,YAFJH,EAAOI,GADA,OAS3B,C,+LCjCKC,EAAU,mCACVC,EAAM,gCAGZ,SAASC,EAAkBC,GACzB,IAAIC,QAAQD,OACV,IAAIE,MAAJ,UAAaF,EAAb,yDAEH,CAEM,IAAMG,EAAoB,mCAAG,oGACZC,EAAAA,EAAAA,IAAA,UAAaN,EAAb,oBAAoC,CACxDO,OAAQ,CAAEC,QAAST,EAASU,KAAM,KAFF,UAIX,OAHjBC,EAD4B,QAItBC,OAJsB,yCAKzBD,EAAQE,MALiB,OAOlCX,EAAkBS,GAPgB,2CAAH,qDAWpBG,EAAiB,mCAAG,WAAMf,GAAN,uFAETQ,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAAyBF,GAAM,CACnDS,OAAQ,CACNC,QAAST,KAJkB,UAOR,OALjBW,EAFyB,QAOnBC,OAPmB,yCAQtBD,EAAQE,MARc,OAU/BX,EAAkBS,GAVa,2CAAH,sDAcjBI,EAAqB,mCAAG,WAAMC,GAAN,uFAEbT,EAAAA,EAAAA,IAAA,UAAaN,EAAb,gBAAgC,CACpDO,OAAQ,CACNC,QAAST,EACTiB,MAAOD,EACPE,SAAU,WANqB,UASZ,OAPjBP,EAF6B,QASvBC,OATuB,yCAU1BD,EAAQE,MAVkB,OAYnCX,EAAkBS,GAZiB,2CAAH,sDAgBrBzB,EAAiB,mCAAG,WAAMJ,GAAN,uFAETyB,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAAyBnB,EAAzB,YAA4C,CAChE0B,OAAQ,CAAEC,QAAST,KAHU,UAKR,OAHjBW,EAFyB,QAKnBC,OALmB,yCAMtBD,EAAQE,MANc,OAQ/BX,EAAkBS,GARa,2CAAH,sDAYjBQ,EAAkB,mCAAG,WAAMrC,GAAN,uFAEVyB,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAAyBnB,EAAzB,YAA4C,CAChE0B,OAAQ,CAAEC,QAAST,KAHW,UAKT,OAHjBW,EAF0B,QAKpBC,OALoB,yCAMvBD,EAAQE,MANe,OAQhCX,EAAkBS,GARc,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","components/api_request.js"],"sourcesContent":["import { handleMovieReview } from 'components/api_request';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    const receiveReview = async () => {\n      await handleMovieReview(movieId)\n        .then(reviews => setReviews(prevReviews => [...reviews.results]))\n        .catch(console.error);\n    };\n    receiveReview();\n  }, [movieId]);\n  if (reviews.length === 0) {\n    return (\n      <div>\n        <p>We don`t have any reviews for this movie.</p>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <ul>\n        {reviews &&\n          reviews.map(review => (\n            <li key={review.id}>\n              <h3>Author: {review.author_details.username}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '7f73521c2f89ba4f40b3583136c2bf19';\nconst url = 'https://api.themoviedb.org/3/';\n\n// ****************************************************************\nfunction returnCustomError(reject) {\n  new Promise.reject(\n    new Error(`${reject} Wrong request!! Nothing was found on your request. `)\n  );\n}\n// #################################################################\nexport const handleRequestPopular = async () => {\n  const request = await axios.get(`${url}trending/all/day`, {\n    params: { api_key: API_KEY, page: 1 },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleRequestById = async id => {\n  // Get the top level details of a movie by ID.\n  const request = await axios.get(`${url}movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleMovieSearchList = async fTitle => {\n  // Search for movies by their original, translated and alternative titles.\n  const request = await axios.get(`${url}search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: fTitle,\n      language: 'en-US',\n    },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleMovieReview = async movieId => {\n  // https://api.themoviedb.org/3/movie/{movie_id}/reviews\n  const request = await axios.get(`${url}movie/${movieId}/reviews`, {\n    params: { api_key: API_KEY },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleMovieCredits = async movieId => {\n  // https://api.themoviedb.org/3/movie/{movie_id}/credits\n  const request = await axios.get(`${url}movie/${movieId}/credits`, {\n    params: { api_key: API_KEY },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n"],"names":["Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","receiveReview","handleMovieReview","then","prevReviews","results","catch","console","error","length","map","review","author_details","username","content","id","API_KEY","url","returnCustomError","reject","Promise","Error","handleRequestPopular","axios","params","api_key","page","request","status","data","handleRequestById","handleMovieSearchList","fTitle","query","language","handleMovieCredits"],"sourceRoot":""}