{"version":3,"file":"static/js/886.04f7e2c9.chunk.js","mappings":"+SAEMA,EAAU,mCACVC,EAAM,gCAGZ,SAASC,EAAkBC,GACzB,IAAIC,QAAQD,OACV,IAAIE,MAAJ,UAAaF,EAAb,yDAEH,CAEM,IAAMG,EAAoB,mCAAG,oGACZC,EAAAA,EAAAA,IAAA,UAAaN,EAAb,oBAAoC,CACxDO,OAAQ,CAAEC,QAAST,EAASU,KAAM,KAFF,UAIX,OAHjBC,EAD4B,QAItBC,OAJsB,yCAKzBD,EAAQE,MALiB,OAOlCX,EAAkBS,GAPgB,2CAAH,qDAWpBG,EAAiB,mCAAG,WAAMC,GAAN,uFAETR,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAAyBc,GAAM,CACnDP,OAAQ,CACNC,QAAST,KAJkB,UAOR,OALjBW,EAFyB,QAOnBC,OAPmB,yCAQtBD,EAAQE,MARc,OAU/BX,EAAkBS,GAVa,2CAAH,sDAcjBK,EAAqB,mCAAG,WAAMC,GAAN,2HAI7BT,EAAS,CACbC,QAAST,EACTkB,MAAM,GAAD,OAAKD,IANuB,SAUbV,EAAAA,EAAAA,IAVa,4CAUO,CAAEC,OAAAA,IAVT,UAWZ,OADjBG,EAV6B,QAWvBC,OAXuB,yCAY1BD,EAAQE,MAZkB,OAcnCX,EAAkBS,GAdiB,2CAAH,sDAkBrBQ,EAAiB,mCAAG,WAAMC,GAAN,uFAETb,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAAyBmB,EAAzB,YAA4C,CAChEZ,OAAQ,CAAEC,QAAST,KAHU,UAKR,OAHjBW,EAFyB,QAKnBC,OALmB,yCAMtBD,EAAQE,MANc,OAQ/BX,EAAkBS,GARa,2CAAH,sDAYjBU,EAAkB,mCAAG,WAAMD,GAAN,uFAEVb,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAAyBmB,EAAzB,YAA4C,CAChEZ,OAAQ,CAAEC,QAAST,KAHW,UAKT,OAHjBW,EAF0B,QAKpBC,OALoB,yCAMvBD,EAAQE,MANe,OAQhCX,EAAkBS,GARc,2CAAH,qD,iKC/DhB,SAASW,EAAT,GAAuD,IAA1BX,EAAyB,EAAzBA,QAASY,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KAE3D,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAcA,OAXAC,EAAAA,EAAAA,YAAU,WACR,GAAKL,EAAL,CAEA,IAAMM,EAAY,mCAAG,+FACbb,EAAAA,EAAAA,IAAsBL,GACzBmB,MAAK,SAAAC,GAAI,OAAIJ,GAAY,OAAII,EAAKC,SAAzB,IACTC,OAAM,SAAAC,GAAG,OAAIC,MAAMD,EAAIE,QAAd,IAHO,2CAAH,qDAKlBP,GAPmB,CAQpB,GAAE,CAAClB,EAASY,IAEW,IAApBG,EAASW,QAAgBd,GAEzB,0BACE,uBAAG,gDAKP,wBACGG,EAASY,KAAI,SAAAC,GAAI,OAChB,yBACE,SAAC,KAAD,CAASC,GAAE,UAAKD,EAAKxB,IAAM0B,MAAO,CAAEC,KAAMlB,GAA1C,SACGe,EAAKI,MAAQJ,EAAKI,MAAQJ,EAAKK,QAF3BL,EAAKxB,GADE,KASvB,CCjCc,SAAS8B,IAEtB,OAA4BC,EAAAA,EAAAA,IAAgB,IAA5C,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAsCvB,EAAAA,EAAAA,WAAS,GAA/C,eAAOwB,EAAP,KAAoBC,EAApB,KAEMC,GAAWC,EAAAA,EAAAA,MAajB,OACE,iCACE,kBAAMC,SAbV,SAAsBC,GACpBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACXC,EAAYF,EAAKG,SAASC,WAAWC,MAErCrD,EAAuB,KAAdkD,EAAmB,CAAC,EAAI,CAAEI,MAAOJ,EAAUK,eAC1Df,EAAUxC,GACV0C,GAAe,GACfM,EAAKQ,OACN,EAIG,WACE,wBAAI,yBACJ,kBACEC,KAAK,OACLrB,KAAK,aACLsB,YAAY,yBAEd,mBAAQD,KAAK,SAAb,SAAsB,eAGxB,SAAC3C,EAAD,CACEX,QAASoC,EACTxB,OAAQ0B,EACRzB,KAAM2B,MAIb,C","sources":["components/api_request.js","components/FIlteredMovieList/FIlteredMovieList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '7f73521c2f89ba4f40b3583136c2bf19';\nconst url = 'https://api.themoviedb.org/3/';\n\n// ****************************************************************\nfunction returnCustomError(reject) {\n  new Promise.reject(\n    new Error(`${reject} Wrong request!! Nothing was found on your request. `)\n  );\n}\n// #################################################################\nexport const handleRequestPopular = async () => {\n  const request = await axios.get(`${url}trending/all/day`, {\n    params: { api_key: API_KEY, page: 1 },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleRequestById = async id => {\n  // Get the top level details of a movie by ID.\n  const request = await axios.get(`${url}movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleMovieSearchList = async fTitle => {\n  // Search for movies by their original, translated and alternative titles.\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie`;\n\n  const params = {\n    api_key: API_KEY,\n    query: `${fTitle}`,\n    // page: 1,\n  };\n\n  const request = await axios.get(BASE_URL, { params });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleMovieReview = async movieId => {\n  // https://api.themoviedb.org/3/movie/{movie_id}/reviews\n  const request = await axios.get(`${url}movie/${movieId}/reviews`, {\n    params: { api_key: API_KEY },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleMovieCredits = async movieId => {\n  // https://api.themoviedb.org/3/movie/{movie_id}/credits\n  const request = await axios.get(`${url}movie/${movieId}/credits`, {\n    params: { api_key: API_KEY },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n","import { useEffect, useState } from 'react';\nimport { handleMovieSearchList } from 'components/api_request';\nimport { NavLink } from 'react-router-dom';\n\nexport default function FilteredMovieList({ request, isData, path }) {\n  // дані які прийшли по запиту\n  const [responce, setResponce] = useState([]);\n\n  //******************************* */\n  useEffect(() => {\n    if (!isData) return;\n\n    const receivedData = async () => {\n      await handleMovieSearchList(request)\n        .then(resp => setResponce([...resp.results]))\n        .catch(err => alert(err.message));\n    };\n    receivedData();\n  }, [request, isData]);\n  // ********************************\n  if (responce.length === 0 && isData) {\n    return (\n      <div>\n        <p>Sorry, there is no data for the request.</p>\n      </div>\n    );\n  }\n  return (\n    <ul>\n      {responce.map(film => (\n        <li key={film.id}>\n          <NavLink to={`${film.id}`} state={{ from: path }}>\n            {film.title ? film.title : film.name}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useLocation, useSearchParams } from 'react-router-dom';\n\nimport FilteredMovieList from 'components/FIlteredMovieList/FIlteredMovieList';\nimport { useState } from 'react';\n\nexport default function Movies() {\n  // робота з даними інпуту\n  const [filter, setFilter] = useSearchParams('');\n  const [receiveData, setReceiveData] = useState(false);\n\n  const location = useLocation();\n  // ********************************\n  function onSubmitForm(evt) {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const inputData = form.elements.movieInput.value;\n\n    const params = inputData === '' ? {} : { movie: inputData.toLowerCase() };\n    setFilter(params);\n    setReceiveData(true);\n    form.reset();\n  }\n\n  return (\n    <>\n      <form onSubmit={onSubmitForm}>\n        <h1>Movie searcing page</h1>\n        <input\n          type=\"text\"\n          name=\"movieInput\"\n          placeholder=\"Enter title of film\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      <FilteredMovieList\n        request={filter}\n        isData={receiveData}\n        path={location}\n      />\n    </>\n  );\n}\n"],"names":["API_KEY","url","returnCustomError","reject","Promise","Error","handleRequestPopular","axios","params","api_key","page","request","status","data","handleRequestById","id","handleMovieSearchList","fTitle","query","handleMovieReview","movieId","handleMovieCredits","FilteredMovieList","isData","path","useState","responce","setResponce","useEffect","receivedData","then","resp","results","catch","err","alert","message","length","map","film","to","state","from","title","name","Movies","useSearchParams","filter","setFilter","receiveData","setReceiveData","location","useLocation","onSubmit","evt","preventDefault","form","currentTarget","inputData","elements","movieInput","value","movie","toLowerCase","reset","type","placeholder"],"sourceRoot":""}