{"version":3,"file":"static/js/327.cf83d72a.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.jsx","components/api_request.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {\n  handleMovieSearchList,\n  handleRequestPopular,\n} from 'components/api_request';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst toastStyle = {\n  position: 'top-right',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n};\n\nexport default function MovieList({ request, conponentStat, path }) {\n  // дані які прийшли по запиту\n  const [responce, setResponce] = useState([]);\n  const [error, setError] = useState(null);\n  // ********************************\n  useEffect(() => {\n    if (conponentStat === 'trends') {\n      onLoadMovies();\n    }\n    if (conponentStat === 'filter') {\n      if (request) onRequestLoadMovies(request);\n    }\n  }, [request, conponentStat]);\n\n  // ********************************\n  async function onLoadMovies() {\n    await handleRequestPopular()\n      .then(reqObj => {\n        setResponce(prevResponce => [...reqObj.results]);\n      })\n      .catch(err => {\n        setError(err.message);\n      });\n  }\n  // ********************************\n  async function onRequestLoadMovies(request) {\n    await handleMovieSearchList(request)\n      .then(resp => {\n        if (resp.results.length === 0) {\n          return toast.error(\n            'Didn`t find anything on this request',\n            toastStyle\n          );\n        }\n        setResponce([...resp.results]);\n      })\n      .catch(err => {\n        setError(err.message);\n      });\n  }\n\n  if (error) {\n    return (\n      <div className=\"error-message\">\n        <h2>{error}</h2>\n      </div>\n    );\n  }\n  return (\n    <>\n      <ToastContainer />\n      <ul>\n        {responce.map(film => (\n          <li key={film.id}>\n            <NavLink\n              to={\n                conponentStat === 'trends' ? `/movies/${film.id}` : `${film.id}`\n              }\n              state={{ from: path }}\n            >\n              {film.title ? film.title : film.name}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '7f73521c2f89ba4f40b3583136c2bf19';\nconst url = 'https://api.themoviedb.org/3/';\n\n// ****************************************************************\nfunction returnCustomError(reject) {\n  new Promise.reject(\n    new Error(`${reject} Wrong request!! Nothing was found on your request. `)\n  );\n}\n// #################################################################\nexport const handleRequestPopular = async () => {\n  const request = await axios.get(`${url}trending/all/day`, {\n    params: { api_key: API_KEY, page: 1 },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleRequestById = async id => {\n  // Get the top level details of a movie by ID.\n  const request = await axios.get(`${url}movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  // // ********************************\n  // console.log('movieId from  component => : ', id);\n  // console.log('movieId =>: ', request);\n  // // ********************************\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleMovieSearchList = async fTitle => {\n  // Search for movies by their original, translated and alternative titles.\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie`;\n\n  const params = {\n    api_key: API_KEY,\n    query: `${fTitle}`,\n    page: 1,\n  };\n\n  const request = await axios.get(BASE_URL, { params });\n  // ********************************\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleMovieReview = async movieId => {\n  // https://api.themoviedb.org/3/movie/{movie_id}/reviews\n  const request = await axios.get(`${url}movie/${movieId}/reviews`, {\n    params: { api_key: API_KEY },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleMovieCredits = async movieId => {\n  // https://api.themoviedb.org/3/movie/{movie_id}/credits\n  const request = await axios.get(`${url}movie/${movieId}/credits`, {\n    params: { api_key: API_KEY },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n","import { useLocation } from 'react-router-dom';\nimport './HomePage.scss';\nimport MovieList from 'components/MovieList/MovieList';\n\nexport default function HomePage() {\n  const location = useLocation();\n  const status = 'trends';\n  return (\n    <>\n      <h2>Trending today</h2>\n      <MovieList path={location} conponentStat={status} />\n    </>\n  );\n}\n"],"names":["toastStyle","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","MovieList","request","conponentStat","path","useState","responce","setResponce","error","setError","handleRequestPopular","then","reqObj","prevResponce","results","catch","err","message","handleMovieSearchList","resp","length","toast","useEffect","onLoadMovies","onRequestLoadMovies","className","map","film","to","id","state","from","title","name","API_KEY","url","returnCustomError","reject","Promise","Error","axios","params","api_key","page","status","data","handleRequestById","fTitle","query","handleMovieReview","movieId","handleMovieCredits","HomePage","location","useLocation"],"sourceRoot":""}