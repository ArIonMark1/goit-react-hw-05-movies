{"version":3,"file":"static/js/312.79f17cb0.chunk.js","mappings":"wQAKe,SAASA,IACtB,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,+FACRC,EAAAA,EAAAA,IAAmBJ,GADX,mFAAH,qDAGpBG,IACGE,MAAK,SAAAC,GAAI,OAAIP,GAAc,SAAAQ,GAAc,cAAQD,EAAKE,KAAb,GAAhC,IACTC,MAAMC,QAAQC,MAClB,GAAE,CAACX,IAIJ,OAA0B,IAAtBF,EAAWc,QACN,yBAAK,+CAGZ,eAAIC,UAAU,aAAd,SACGf,EAAWgB,KAAI,SAAAC,GAAS,OACvB,gBAAIF,UAAU,oBAAd,WACE,gBACEA,UAAU,mBACVG,IACED,EAAUE,aAAV,UAZM,mCAYN,OACsBF,EAAUE,cAC5B,sCAENC,IAAKH,EAAUI,QAEjB,iBAAKN,UAAU,sBAAf,WACE,eAAGA,UAAU,mBAAb,WACE,iBAAMA,UAAU,YAAhB,SAA4B,UAAY,IAAEE,EAAUI,SAEtD,eAAGN,UAAU,mBAAb,WACE,iBAAMA,UAAU,YAAhB,SAA4B,eAAkB,IAC7CE,EAAUA,kBAhBsBA,EAAUK,GAD1B,KAwB9B,C,+LC/CKC,EAAU,mCACVC,EAAM,gCAGZ,SAASC,EAAkBC,GACzB,IAAIC,QAAQD,OACV,IAAIE,MAAJ,UAAaF,EAAb,yDAEH,CAEM,IAAMG,EAAoB,mCAAG,oGACZC,EAAAA,EAAAA,IAAA,UAAaN,EAAb,oBAAoC,CACxDO,OAAQ,CAAEC,QAAST,EAASU,KAAM,KAFF,UAIX,OAHjBC,EAD4B,QAItBC,OAJsB,yCAKzBD,EAAQE,MALiB,OAOlCX,EAAkBS,GAPgB,2CAAH,qDAWpBG,EAAiB,mCAAG,WAAMf,GAAN,uFAETQ,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAAyBF,GAAM,CACnDS,OAAQ,CACNC,QAAST,KAJkB,UAOR,OALjBW,EAFyB,QAOnBC,OAPmB,yCAQtBD,EAAQE,MARc,OAU/BX,EAAkBS,GAVa,2CAAH,sDAcjBI,EAAqB,mCAAG,WAAMC,GAAN,2HAI7BR,EAAS,CACbC,QAAST,EACTiB,MAAM,GAAD,OAAKD,IANuB,SAUbT,EAAAA,EAAAA,IAVa,4CAUO,CAAEC,OAAAA,IAVT,UAWZ,OADjBG,EAV6B,QAWvBC,OAXuB,yCAY1BD,EAAQE,MAZkB,OAcnCX,EAAkBS,GAdiB,2CAAH,sDAkBrBO,EAAiB,mCAAG,WAAMvC,GAAN,uFAET4B,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAAyBtB,EAAzB,YAA4C,CAChE6B,OAAQ,CAAEC,QAAST,KAHU,UAKR,OAHjBW,EAFyB,QAKnBC,OALmB,yCAMtBD,EAAQE,MANc,OAQ/BX,EAAkBS,GARa,2CAAH,sDAYjB5B,EAAkB,mCAAG,WAAMJ,GAAN,uFAEV4B,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAAyBtB,EAAzB,YAA4C,CAChE6B,OAAQ,CAAEC,QAAST,KAHW,UAKT,OAHjBW,EAF0B,QAKpBC,OALoB,yCAMvBD,EAAQE,MANe,OAQhCX,EAAkBS,GARc,2CAAH,qD","sources":["components/Cast/Cast.jsx","components/api_request.js"],"sourcesContent":["import { handleMovieCredits } from 'components/api_request';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './Cast.scss';\n\nexport default function Cast() {\n  const [characters, setCharacters] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const handleTeamList = async () => {\n      return await handleMovieCredits(movieId);\n    };\n    handleTeamList()\n      .then(team => setCharacters(prevCharacters => [...team.cast]))\n      .catch(console.error);\n  }, [movieId]);\n  //\n  const characterImg = `https://image.tmdb.org/t/p/w200`;\n\n  if (characters.length === 0) {\n    return <div>Movie without characters! Unbelievably!!!</div>;\n  }\n  return (\n    <ul className=\"listActors\">\n      {characters.map(character => (\n        <li className=\"listActors__block\" key={character.id}>\n          <img\n            className=\"listActors__foto\"\n            src={\n              character.profile_path\n                ? `${characterImg}${character.profile_path}`\n                : 'https://via.placeholder.com/200x300'\n            }\n            alt={character.name}\n          />\n          <div className=\"listActors__content\">\n            <p className=\"listActors__name\">\n              <span className=\"titleInfo\">Name:</span> {character.name}\n            </p>\n            <p className=\"listActors__role\">\n              <span className=\"titleInfo\">Character:</span>{' '}\n              {character.character}\n            </p>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '7f73521c2f89ba4f40b3583136c2bf19';\nconst url = 'https://api.themoviedb.org/3/';\n\n// ****************************************************************\nfunction returnCustomError(reject) {\n  new Promise.reject(\n    new Error(`${reject} Wrong request!! Nothing was found on your request. `)\n  );\n}\n// #################################################################\nexport const handleRequestPopular = async () => {\n  const request = await axios.get(`${url}trending/all/day`, {\n    params: { api_key: API_KEY, page: 1 },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleRequestById = async id => {\n  // Get the top level details of a movie by ID.\n  const request = await axios.get(`${url}movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleMovieSearchList = async fTitle => {\n  // Search for movies by their original, translated and alternative titles.\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie`;\n\n  const params = {\n    api_key: API_KEY,\n    query: `${fTitle}`,\n    // page: 1,\n  };\n\n  const request = await axios.get(BASE_URL, { params });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleMovieReview = async movieId => {\n  // https://api.themoviedb.org/3/movie/{movie_id}/reviews\n  const request = await axios.get(`${url}movie/${movieId}/reviews`, {\n    params: { api_key: API_KEY },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleMovieCredits = async movieId => {\n  // https://api.themoviedb.org/3/movie/{movie_id}/credits\n  const request = await axios.get(`${url}movie/${movieId}/credits`, {\n    params: { api_key: API_KEY },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n"],"names":["Cast","useState","characters","setCharacters","movieId","useParams","useEffect","handleTeamList","handleMovieCredits","then","team","prevCharacters","cast","catch","console","error","length","className","map","character","src","profile_path","alt","name","id","API_KEY","url","returnCustomError","reject","Promise","Error","handleRequestPopular","axios","params","api_key","page","request","status","data","handleRequestById","handleMovieSearchList","fTitle","query","handleMovieReview"],"sourceRoot":""}