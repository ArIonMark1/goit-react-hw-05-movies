{"version":3,"file":"static/js/115.5ac41488.chunk.js","mappings":"iRAIe,SAASA,IAEtB,OAA4BC,EAAAA,EAAAA,IAAgB,IAA5C,eAAOC,EAAP,KAAeC,EAAf,KAGA,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAuBjB,OArBAC,EAAAA,EAAAA,YAAU,WACR,GAAe,KAAXP,EAAJ,CAEA,IAAMQ,EAAY,mCAAG,+FACbC,EAAAA,EAAAA,IAAsBT,GACzBU,MAAK,SAAAC,GAAI,OAAIP,GAAY,OAAIO,EAAKC,SAAzB,IACTC,MAAMC,QAAQC,OAHE,2CAAH,qDAKlBP,GAPyB,CAQ1B,GAAE,CAACR,KAaF,iCACE,kBAAMgB,SAZV,SAAsBC,GACpBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACXC,EAAYF,EAAKG,SAASC,WAAWC,MAErCC,EAAuB,KAAdJ,EAAmB,CAAC,EAAI,CAAEK,MAAOL,EAAUM,eAC1D1B,EAAUwB,GACVN,EAAKS,OACN,EAIG,WACE,wBAAI,yBACJ,kBACEC,KAAK,OACLC,KAAK,aACLC,YAAY,yBAEd,mBAAQF,KAAK,SAAb,SAAsB,eAExB,wBACG1B,EAAS6B,KAAI,SAAAC,GAAI,OAChB,yBACE,SAAC,KAAD,CAASC,GAAE,UAAKD,EAAKE,IAAMC,MAAO,CAAEC,KAAMhC,GAA1C,SACG4B,EAAKK,MAAQL,EAAKK,MAAQL,EAAKH,QAF3BG,EAAKE,GADE,QAUzB,C,+LCrDKI,EAAU,mCACVC,EAAM,gCAGZ,SAASC,EAAkBC,GACzB,IAAIC,QAAQD,OACV,IAAIE,MAAJ,UAAaF,EAAb,yDAEH,CAEM,IAAMG,EAAoB,mCAAG,oGACZC,EAAAA,EAAAA,IAAA,UAAaN,EAAb,oBAAoC,CACxDf,OAAQ,CAAEsB,QAASR,EAASS,KAAM,KAFF,UAIX,OAHjBC,EAD4B,QAItBC,OAJsB,yCAKzBD,EAAQE,MALiB,OAOlCV,EAAkBQ,GAPgB,2CAAH,qDAWpBG,EAAiB,mCAAG,WAAMjB,GAAN,uFAETW,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAAyBL,GAAM,CACnDV,OAAQ,CACNsB,QAASR,KAJkB,UAOR,OALjBU,EAFyB,QAOnBC,OAPmB,yCAQtBD,EAAQE,MARc,OAU/BV,EAAkBQ,GAVa,2CAAH,sDAcjBxC,EAAqB,mCAAG,WAAM4C,GAAN,uFAEbP,EAAAA,EAAAA,IAAA,UAAaN,EAAb,gBAAgC,CACpDf,OAAQ,CACNsB,QAASR,EACTe,MAAOD,EACPE,SAAU,WANqB,UASZ,OAPjBN,EAF6B,QASvBC,OATuB,yCAU1BD,EAAQE,MAVkB,OAYnCV,EAAkBQ,GAZiB,2CAAH,sDAgBrBO,EAAiB,mCAAG,WAAMC,GAAN,uFAETX,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAAyBiB,EAAzB,YAA4C,CAChEhC,OAAQ,CAAEsB,QAASR,KAHU,UAKR,OAHjBU,EAFyB,QAKnBC,OALmB,yCAMtBD,EAAQE,MANc,OAQ/BV,EAAkBQ,GARa,2CAAH,sDAYjBS,EAAkB,mCAAG,WAAMD,GAAN,uFAEVX,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAAyBiB,EAAzB,YAA4C,CAChEhC,OAAQ,CAAEsB,QAASR,KAHW,UAKT,OAHjBU,EAF0B,QAKpBC,OALoB,yCAMvBD,EAAQE,MANe,OAQhCV,EAAkBQ,GARc,2CAAH,qD","sources":["components/Movies/Movies.jsx","components/api_request.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { handleMovieSearchList } from 'components/api_request';\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  // робота з даними інпуту\n  const [filter, setFilter] = useSearchParams('');\n\n  // дані які прийшли по запиту\n  const [responce, setResponce] = useState([]);\n  const location = useLocation();\n  // ********************************\n  useEffect(() => {\n    if (filter === '') return;\n\n    const receivedData = async () => {\n      await handleMovieSearchList(filter)\n        .then(resp => setResponce([...resp.results]))\n        .catch(console.error);\n    };\n    receivedData();\n  }, [filter]);\n  // ********************************\n  function onSubmitForm(evt) {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const inputData = form.elements.movieInput.value;\n\n    const params = inputData === '' ? {} : { movie: inputData.toLowerCase() };\n    setFilter(params);\n    form.reset();\n  }\n\n  return (\n    <>\n      <form onSubmit={onSubmitForm}>\n        <h1>Movie searcing page</h1>\n        <input\n          type=\"text\"\n          name=\"movieInput\"\n          placeholder=\"Enter title of film\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {responce.map(film => (\n          <li key={film.id}>\n            <NavLink to={`${film.id}`} state={{ from: location }}>\n              {film.title ? film.title : film.name}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '7f73521c2f89ba4f40b3583136c2bf19';\nconst url = 'https://api.themoviedb.org/3/';\n\n// ****************************************************************\nfunction returnCustomError(reject) {\n  new Promise.reject(\n    new Error(`${reject} Wrong request!! Nothing was found on your request. `)\n  );\n}\n// #################################################################\nexport const handleRequestPopular = async () => {\n  const request = await axios.get(`${url}trending/all/day`, {\n    params: { api_key: API_KEY, page: 1 },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleRequestById = async id => {\n  // Get the top level details of a movie by ID.\n  const request = await axios.get(`${url}movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleMovieSearchList = async fTitle => {\n  // Search for movies by their original, translated and alternative titles.\n  const request = await axios.get(`${url}search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: fTitle,\n      language: 'en-US',\n    },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleMovieReview = async movieId => {\n  // https://api.themoviedb.org/3/movie/{movie_id}/reviews\n  const request = await axios.get(`${url}movie/${movieId}/reviews`, {\n    params: { api_key: API_KEY },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n\n// #################################################################\nexport const handleMovieCredits = async movieId => {\n  // https://api.themoviedb.org/3/movie/{movie_id}/credits\n  const request = await axios.get(`${url}movie/${movieId}/credits`, {\n    params: { api_key: API_KEY },\n  });\n  if (request.status === 200) {\n    return request.data;\n  }\n  returnCustomError(request);\n};\n"],"names":["Movies","useSearchParams","filter","setFilter","useState","responce","setResponce","location","useLocation","useEffect","receivedData","handleMovieSearchList","then","resp","results","catch","console","error","onSubmit","evt","preventDefault","form","currentTarget","inputData","elements","movieInput","value","params","movie","toLowerCase","reset","type","name","placeholder","map","film","to","id","state","from","title","API_KEY","url","returnCustomError","reject","Promise","Error","handleRequestPopular","axios","api_key","page","request","status","data","handleRequestById","fTitle","query","language","handleMovieReview","movieId","handleMovieCredits"],"sourceRoot":""}