{"version":3,"file":"static/js/312.ae766f9e.chunk.js","mappings":"wQAKe,SAASA,IACtB,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,+FACRC,EAAAA,EAAAA,IAAmBJ,GADX,mFAAH,qDAGpBG,IACGE,MAAK,SAAAC,GAAI,OAAIP,GAAc,SAAAQ,GAAc,cAAQD,EAAKE,KAAb,GAAhC,IACTC,MAAMC,QAAQC,MAClB,GAAE,CAACX,IAEsB,IAAtBF,EAAWc,QAEX,0BACE,uBAAG,wDAMP,eAAIC,UAAU,aAAd,SACGf,EAAWgB,KAAI,SAAAC,GAAS,OACvB,gBAAIF,UAAU,oBAAd,WACE,gBACEA,UAAU,mBACVG,IACED,EAAUE,aAAV,yCACsCF,EAAUE,cAC5C,sCAENC,IAAKH,EAAUI,QAEjB,iBAAKN,UAAU,sBAAf,WACE,eAAGA,UAAU,mBAAb,WACE,iBAAMA,UAAU,YAAhB,SAA4B,UAAY,IAAEE,EAAUI,SAEtD,eAAGN,UAAU,mBAAb,WACE,iBAAMA,UAAU,YAAhB,SAA4B,eAC3BE,EAAUA,kBAhBsBA,EAAUK,GAD1B,KAwB9B,C,+LClDKC,EAAU,mCACVC,EAAM,gCAGZ,SAASC,EAAkBC,GAIzB,OAHmBC,QAAQD,OACzB,IAAIE,MAAJ,0BAA6BF,EAAOG,QAApC,0BAGH,CAEM,IAAMC,EAAoB,mCAAG,6GAEVC,EAAAA,EAAAA,IAAA,UAAaP,EAAb,oBAAoC,CACxDQ,OAAQ,CAAEC,QAASV,EAASW,KAAM,KAHJ,cAE1BC,EAF0B,yBAKzBA,EAAQC,MALiB,yDAOzBX,EAAkB,EAAD,KAPQ,yDAAH,qDAYpBY,EAAiB,mCAAG,WAAMf,GAAN,gGAGPS,EAAAA,EAAAA,IAAA,UAAaP,EAAb,iBAAyBF,GAAM,CACnDU,OAAQ,CACNC,QAASV,KALgB,cAGvBY,EAHuB,yBAQtBA,EAAQC,MARc,yDAUtBX,EAAkB,EAAD,KAVK,yDAAH,sDAgBjBa,EAAqB,mCAAG,WAAMC,GAAN,kFAE7BC,EAF6B,UAEfhB,EAFe,gBAI7BQ,EAAS,CACbC,QAASV,EACTkB,MAAM,GAAD,OAAKF,GACVL,KAAM,GAP2B,kBAUXH,EAAAA,EAAAA,IAAUS,EAAU,CAAER,OAAAA,IAVX,cAU3BG,EAV2B,yBAW1BA,EAAQC,MAXkB,yDAa1BX,EAAkB,EAAD,KAbS,yDAAH,sDAmBrBiB,EAAiB,mCAAG,WAAMxC,GAAN,gGAGP6B,EAAAA,EAAAA,IAAA,UAAaP,EAAb,iBAAyBtB,EAAzB,YAA4C,CAChE8B,OAAQ,CAAEC,QAASV,KAJQ,cAGvBY,EAHuB,yBAMtBA,EAAQC,MANc,yDAQtBX,EAAkB,EAAD,KARK,yDAAH,sDAajBnB,EAAkB,mCAAG,WAAMJ,GAAN,gGAGR6B,EAAAA,EAAAA,IAAA,UAAaP,EAAb,iBAAyBtB,EAAzB,YAA4C,CAChE8B,OAAQ,CAAEC,QAASV,KAJS,cAGxBY,EAHwB,yBAMvBA,EAAQC,MANe,yDAQvBX,EAAkB,EAAD,KARM,yDAAH,qD","sources":["components/Cast/Cast.jsx","components/api_request.js"],"sourcesContent":["import { handleMovieCredits } from 'components/api_request';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './Cast.scss';\n\nexport default function Cast() {\n  const [characters, setCharacters] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const handleTeamList = async () => {\n      return await handleMovieCredits(movieId);\n    };\n    handleTeamList()\n      .then(team => setCharacters(prevCharacters => [...team.cast]))\n      .catch(console.error);\n  }, [movieId]);\n  //\n  if (characters.length === 0) {\n    return (\n      <div>\n        <p>We didn`t add some information about characters.</p>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"listActors\">\n      {characters.map(character => (\n        <li className=\"listActors__block\" key={character.id}>\n          <img\n            className=\"listActors__foto\"\n            src={\n              character.profile_path\n                ? `https://image.tmdb.org/t/p/w200${character.profile_path}`\n                : 'https://via.placeholder.com/200x300'\n            }\n            alt={character.name}\n          />\n          <div className=\"listActors__content\">\n            <p className=\"listActors__name\">\n              <span className=\"titleInfo\">Name:</span> {character.name}\n            </p>\n            <p className=\"listActors__role\">\n              <span className=\"titleInfo\">Character:</span>\n              {character.character}\n            </p>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '7f73521c2f89ba4f40b3583136c2bf19';\nconst url = 'https://api.themoviedb.org/3/';\n\n// ****************************************************************\nfunction returnCustomError(reject) {\n  const errMessage = Promise.reject(\n    new Error(`Wrong request!! ${reject.message}, nothing was found. `)\n  );\n  return errMessage;\n}\n// #################################################################\nexport const handleRequestPopular = async () => {\n  try {\n    const request = await axios.get(`${url}trending/all/day`, {\n      params: { api_key: API_KEY, page: 1 },\n    });\n    return request.data;\n  } catch (error) {\n    return returnCustomError(error);\n  }\n};\n\n// #################################################################\nexport const handleRequestById = async id => {\n  // Get the top level details of a movie by ID.\n  try {\n    const request = await axios.get(`${url}movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return request.data;\n  } catch (error) {\n    return returnCustomError(error);\n  }\n  // // ********************************\n};\n\n// #################################################################\nexport const handleMovieSearchList = async fTitle => {\n  // Search for movies by their original, translated and alternative titles.\n  const BASE_URL = `${url}search/movie`;\n\n  const params = {\n    api_key: API_KEY,\n    query: `${fTitle}`,\n    page: 1,\n  };\n  try {\n    const request = await axios.get(BASE_URL, { params });\n    return request.data;\n  } catch (error) {\n    return returnCustomError(error);\n  }\n  // ********************************\n};\n\n// #################################################################\nexport const handleMovieReview = async movieId => {\n  // https://api.themoviedb.org/3/movie/{movie_id}/reviews\n  try {\n    const request = await axios.get(`${url}movie/${movieId}/reviews`, {\n      params: { api_key: API_KEY },\n    });\n    return request.data;\n  } catch (error) {\n    return returnCustomError(error);\n  }\n};\n\n// #################################################################\nexport const handleMovieCredits = async movieId => {\n  // https://api.themoviedb.org/3/movie/{movie_id}/credits\n  try {\n    const request = await axios.get(`${url}movie/${movieId}/credits`, {\n      params: { api_key: API_KEY },\n    });\n    return request.data;\n  } catch (error) {\n    return returnCustomError(error);\n  }\n};\n"],"names":["Cast","useState","characters","setCharacters","movieId","useParams","useEffect","handleTeamList","handleMovieCredits","then","team","prevCharacters","cast","catch","console","error","length","className","map","character","src","profile_path","alt","name","id","API_KEY","url","returnCustomError","reject","Promise","Error","message","handleRequestPopular","axios","params","api_key","page","request","data","handleRequestById","handleMovieSearchList","fTitle","BASE_URL","query","handleMovieReview"],"sourceRoot":""}